plugins {
    id 'java'
    id 'application'
    id 'net.ltgt.errorprone' version '2.0.2'
    id 'checkstyle'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    // Checks
    errorprone 'com.google.errorprone:error_prone_core:2.15.0'
    checkstyle 'com.puppycrawl.tools:checkstyle:10.3.3'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.0'
    implementation 'ch.qos.logback:logback-classic:1.4.0'
    // As one-nio uses log4j directly
    implementation 'org.slf4j:log4j-over-slf4j:2.0.0'

    // Annotations for better code documentation
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Our beloved one-nio
    implementation 'ru.odnoklassniki:one-nio:1.7.1'

    //implementation 'jdk.incubator.foreign'

    // JUnit Jupiter test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

// Use JDK Incubator Foreign module (for MemorySegment users)
def incubatorArgs = ["--add-modules", "jdk.incubator.foreign"]

application {
    mainClass = 'galeev.DemoService'
    applicationDefaultJvmArgs = ['-Xmx128m'] + incubatorArgs
}

test {
    maxHeapSize = "128m"
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main']
        }
    }
    test {
        java {
            srcDirs = ['src/test']
        }
    }
}

checkstyle {
    configFile = new File("checkstyle.xml")
    checkstyleTest.enabled = false
}

tasks.withType(JavaCompile) {
    options.compilerArgs += incubatorArgs
}

tasks.withType(Test) {
    jvmArgs += incubatorArgs
}